// Custom mixins and functions

// Categories colour
@function categories($key) {
  @if map-has-key($categories, $key) {
    @return map-get($categories, $key);
  }
 
  @warn "Unknown `#{$key}` in $z-layers.";
  @return null;
}



// Crossbrowser opacity
@mixin opacity($value) {
  $IEValue: $value * 100;
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  filter: alpha(opacity=$IEValue);
}

// Mixin for retina background images
// Usage @include retina-bg('foobar', 'png', 10px, 20px);
@mixin retina-bg($file, $type, $width, $height) {
  background-image: url('../img/' + $file + '.' + $type);
  background-repeat: no-repeat;

  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 144dpi) {
    & {
      background-image: url('../img/' + $file + '@2x.' + $type);
      background-size: $width $height;
    }
  }
}

// Mixin for circles
// Usage @include circle(46px, 1px, $white);
@mixin circle($size, $border-width, $border-color) {
  border-radius: $global-rounded;
  border: solid $border-width $border-color;
  text-align: center;
  width: $size;
  height: $size;
  // line-height: $size;
}

// https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/index.html
//
// grayscale      ex: filter: grayscale(100%);
// sepia          ex: filter: sepia(100%);
// saturate       ex: filter: saturate(0%);
// hue-rotate     ex: filter: hue-rotate(45deg);
// invert         ex: filter: invert(100%);
// brightness     ex: filter: brightness(15%);
// contrast       ex: filter: contrast(200%);
// blur           ex: filter: blur(2px);

@mixin filter($filter-type, $filter-amount) {
  @if $filter-amount != 0 {
    -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
    -moz-filter: $filter-type+unquote('(#{$filter-amount})');
    -ms-filter: $filter-type+unquote('(#{$filter-amount})');
    -o-filter: $filter-type+unquote('(#{$filter-amount})');
    filter: $filter-type+unquote('(#{$filter-amount})');
  } @else {
    -webkit-filter: none;
    -moz-filter: none;
    -ms-filter: none;
    -o-filter: none;
    filter: none;
  }
}

@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin gradient($from-color, $to-color) {
  background-color: mix($from-color, $to-color); /* Fallback */
  background-image: -webkit-gradient(linear, 20% 0%, 0% 100%, from($from-color), to($to-color));
  background-image: -webkit-linear-gradient(top, $from-color, $to-color); 
  background-image:    -moz-linear-gradient(top, $from-color, $to-color);
  background-image:     -ms-linear-gradient(top, $from-color, $to-color);
  background-image:      -o-linear-gradient(top, $from-color, $to-color);
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$from-color}', EndColorStr='#{$to-color}')";
}